#!/usr/bin/php
<?php

require('../defines.php');
require(PATH_CLASSES . 'parser.php');
require('_replacer.php');

$cssfile = PATH_PUBLIC . 'css' . DIRECTORY_SEPARATOR . 'main.css';

$csscont = file_get_contents($cssfile);

$mongo = new Mongo();

$dbname = DB;

$db = $mongo->$dbname;

$pc = $db->sites;

$parsers = glob(PATH_CLASSES . 'parsers' . DIRECTORY_SEPARATOR . '*.php');

$icons = array();

foreach($parsers as $parser) {
        require($parser);

        $pinfo = pathinfo($parser);

        $className = 'Parser_' . $pinfo['filename'];

        $parser = new $className($db);

	$icons[$parser->getSiteCode()] = array(
		'filename' => dirname(__FILE__) . 
			DIRECTORY_SEPARATOR . 'favicons' .
			DIRECTORY_SEPARATOR . $parser->getSiteFolder() . '.png',
		'folder' => $parser->getSiteFolder()
	);
}

ksort($icons);

$img = imagecreatetruecolor(16, count($icons) * 2 * 16 - 16);
imagesavealpha($img, true);
imagefill($img, 0, 0, imagecolorallocatealpha($img, 0, 0, 0, 127));
imagealphablending($img, true);

$top = 0;
$css = '';

foreach($icons as $key => $icon) {
	$imgf = imagecreatefrompng($icon['filename']);

	imagecopy($img, $imgf, 0, $top, 0, 0, 16, 16);

	$tt = -$top + 1;

	$css .= <<<EOF
.sico_{$key} { background-position: 0px {$tt}px; }

EOF;

	$top = $top + 32;

	imagedestroy($imgf);
}

imagepng($img, '/tmp/fav.png');
imagedestroy($img);

echo system('optipng /tmp/fav.png');

$img = file_get_contents('/tmp/fav.png');

unlink('/tmp/fav.png');

$coded = base64_encode($img);

$codedtxt = <<<EOF
background-image: url(data:image/png;base64,{$coded});
EOF;

$csscont = replaceTag($csscont, 'favs', $codedtxt);
$csscont = replaceTag($csscont, 'foffset', $css);

file_put_contents($cssfile, $csscont);
