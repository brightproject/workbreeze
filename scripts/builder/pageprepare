#!/usr/bin/php
<?php

require dirname(dirname(__DIR__)) . DIRECTORY_SEPARATOR . 'www' . DIRECTORY_SEPARATOR . 'bootstrap.php';
require __DIR__ . DS . 'compress.php';

define('PATH_JSPREPARE', __DIR__ . DS . 'jsprepare');

$tmpdir = '/tmp/tmpjs/';

if (
	!isset($argc)
	|| $argc < 2
) {
	die("Source page modules dir required\n");
}

if ($argc < 3) {
	die("Path to store output modules required\n");
}

// source path

$sdir = realpath($argv[1]) . DS;

if (!file_exists($sdir)) {
	die($sdir . " - path not found\n");
}

// output path

$odir = realpath($argv[2]) . DS;

if (!file_exists($odir)) {
	die($odir . " - path not found\n");
}

// paths for compilers

$path_gcc = trim(`find ../ -name 'gcc.jar'`);
$path_yui = trim(`find ../ -name 'yui.jar'`);

// begin

foreach(glob($sdir . '*.php') as $filename) {
	$name = pathinfo($filename, PATHINFO_FILENAME);

	echo "\n== " . $name . ".php\n";

	$jsname = $name . '.js';
	$classname = 'M' . ucfirst($name);

	$module = new $classname();

	if (
		$module instanceof PageModule
		&& $scripts = $module->getJS()
	) {
		$js = '';
	
		foreach ($scripts as $script) {
			$js .= shell_exec(escapeshellarg(PATH_JSPREPARE) . ' ' . escapeshellarg(PATH_PUBLIC . 'js' . DS . $script . '.js')) . "\n";
		}
		
		$tmpname = '/tmp/' . $jsname;
		
		file_put_contents($tmpname, $js);
		
		$compressedJS = compressJS(array($tmpname), '');
		
		unlink($tmpname);
	}
		
	$c = file_get_contents($filename);
	
	if (preg_match('@getJS\(\) {(.*?)}@siu', $c, $matches)) {
		$c = str_replace($matches[1], 'return array(\'' . $jsname . '\');', $c);
	}

	if (false !== strpos($c, '#githash')) {
		$hash = trim(`git show --pretty=format:%H --quiet`);

		$c = str_replace('#githash', $hash, $c);
	}
	
	if (preg_match_all('@<<<EOF(.*?)EOF;@siu', $c, $matches)) {
		$m = array_pop($matches);
		
		foreach($m as $part) {
			$tmp = "\n" . PageModule::compress($part) . "\n";
			
			$c = str_replace($part, $tmp, $c);
		}
	}
	
	$tmpname = '/tmp/' . $name . '.php';
	
	file_put_contents($tmpname, $c);
	
	$content = shell_exec('php -w ' . escapeshellarg($tmpname));
	
	unlink($tmpname);
	
	file_put_contents($odir . $name . '.php', $content);
}
